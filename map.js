// Initialize OpenLayers map

const coordinates = [[-0.62952, 52.06663], [-0.62958, 52.06664], [-0.62952, 52.06663], [-0.62958, 52.06664], [-0.6295, 52.06664], [-0.62952, 52.06663], [-0.6295, 52.06664], [-0.62952, 52.06663], [-0.62952, 52.06663], [-0.6295, 52.06664], [-0.62952, 52.06663], [-0.62952, 52.06663], [-0.6295, 52.06664], [-0.6295, 52.06668], [-0.6295, 52.06673], [-0.62952, 52.06673], [-0.6295, 52.06673], [-0.62952, 52.06673], [-0.6295, 52.06673], [-0.62944, 52.06673], [-0.62943, 52.06677], [-0.62936, 52.06677], [-0.62935, 52.06681], [-0.62936, 52.06681], [-0.6292, 52.06686], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62927, 52.06681], [-0.62928, 52.06681], [-0.62928, 52.06681], [-0.62928, 52.06681], [-0.62928, 52.06686], [-0.62927, 52.06681], [-0.62928, 52.06686], [-0.62927, 52.06686], [-0.62935, 52.06686], [-0.62936, 52.06686], [-0.62944, 52.06691], [-0.62944, 52.06691], [-0.6295, 52.06696], [-0.62952, 52.06701], [-0.62958, 52.06705], [-0.6296, 52.0671], [-0.62965, 52.0671], [-0.62967, 52.06714], [-0.62967, 52.06714], [-0.62973, 52.06718], [-0.62975, 52.06718], [-0.62981, 52.06723], [-0.62981, 52.06723], [-0.62981, 52.06723], [-0.62981, 52.06723], [-0.62999, 52.06718], [-0.63004, 52.06718], [-0.63011, 52.06718], [-0.63014, 52.06714], [-0.63034, 52.06714], [-0.63038, 52.06714], [-0.63042, 52.06714], [-0.63046, 52.06714], [-0.63049, 52.06714], [-0.63057, 52.06714], [-0.63065, 52.06718], [-0.63069, 52.06718], [-0.63072, 52.06723], [-0.63069, 52.06723], [-0.63072, 52.06728], [-0.63072, 52.06732], [-0.63077, 52.06733], [-0.63072, 52.06737], [-0.63077, 52.06742], [-0.63095, 52.06764], [-0.63093, 52.0677], [-0.63095, 52.06769], [-0.63101, 52.06775], [-0.63095, 52.06773], [-0.63101, 52.06779], [-0.63103, 52.06783], [-0.63101, 52.06784], [-0.63103, 52.06787], [-0.63101, 52.06789], [-0.63103, 52.06792], [-0.63101, 52.06793], [-0.63103, 52.06796], [-0.63095, 52.06801], [-0.63085, 52.06798], [-0.63087, 52.06801], [-0.63077, 52.06803], [-0.6308, 52.06801], [-0.63072, 52.06801], [-0.63062, 52.06803], [-0.63057, 52.06801], [-0.63049, 52.06805], [-0.63019, 52.0681], [-0.63011, 52.06815], [-0.63007, 52.06812], [-0.62996, 52.06815], [-0.62975, 52.06821], [-0.62965, 52.06819], [-0.62958, 52.06819], [-0.62952, 52.06821], [-0.6295, 52.06824], [-0.62944, 52.06821], [-0.62943, 52.06824], [-0.62936, 52.06826], [-0.62935, 52.06824], [-0.62927, 52.06824], [-0.6292, 52.06824], [-0.62905, 52.06826], [-0.62897, 52.06824], [-0.62897, 52.06821], [-0.62897, 52.06819], [-0.62897, 52.06817], [-0.62889, 52.06815], [-0.62889, 52.06812], [-0.62889, 52.0681], [-0.62889, 52.06807], [-0.62889, 52.06803], [-0.62881, 52.06793], [-0.62881, 52.06792], [-0.62873, 52.06789], [-0.62874, 52.06787], [-0.62873, 52.06784], [-0.62874, 52.06783], [-0.62873, 52.06779], [-0.62866, 52.06778], [-0.62865, 52.06775], [-0.62866, 52.06773], [-0.62857, 52.06765], [-0.62859, 52.06764], [-0.6285, 52.0676], [-0.62851, 52.06755], [-0.6285, 52.06756], [-0.62851, 52.0675], [-0.6285, 52.06747], [-0.62843, 52.06746], [-0.62842, 52.06742], [-0.62842, 52.06738], [-0.62843, 52.06737], [-0.6285, 52.06738], [-0.62851, 52.06737], [-0.62859, 52.06732], [-0.62865, 52.06733], [-0.62866, 52.06737], [-0.62873, 52.06733], [-0.62874, 52.06737], [-0.62881, 52.06733], [-0.62881, 52.06732], [-0.62889, 52.06733], [-0.62897, 52.06732], [-0.62897, 52.06733], [-0.62904, 52.06732], [-0.62905, 52.06728], [-0.62912, 52.06728], [-0.6292, 52.06728], [-0.62928, 52.06728], [-0.62943, 52.06723], [-0.62944, 52.06723], [-0.6295, 52.06723], [-0.62958, 52.06718], [-0.62965, 52.06714], [-0.62967, 52.06714], [-0.62965, 52.0671], [-0.62967, 52.0671], [-0.62965, 52.06705], [-0.6296, 52.06705], [-0.62958, 52.06701], [-0.6296, 52.06696], [-0.62958, 52.06696], [-0.6296, 52.06691], [-0.62958, 52.06686], [-0.6296, 52.06686], [-0.62958, 52.06681], [-0.6296, 52.06681], [-0.62958, 52.06677], [-0.6296, 52.06677], [-0.62958, 52.06673], [-0.6296, 52.06673], [-0.62958, 52.06673], [-0.6296, 52.06673], [-0.6296, 52.06673], [-0.62958, 52.06673], [-0.62952, 52.06673], [-0.62958, 52.06673], [-0.62952, 52.06673], [-0.62958, 52.06673], [-0.62952, 52.06673], [-0.6295, 52.06677], [-0.62952, 52.06677], [-0.6295, 52.06677], [-0.62952, 52.06677], [-0.6295, 52.06677]];

const gps_coords = [[-0.629516, 52.06663], [-0.629517, 52.066631], [-0.62951, 52.066634], [-0.629509, 52.066636], [-0.62951, 52.066636], [-0.629509, 52.066636], [-0.629511, 52.06664], [-0.629513, 52.066639], [-0.629513, 52.066636], [-0.629511, 52.066636], [-0.629514, 52.066635], [-0.629514, 52.066634], [-0.629503, 52.066634], [-0.629493, 52.066637], [-0.629491, 52.066637], [-0.629491, 52.066637], [-0.629492, 52.066637], [-0.629491, 52.066637], [-0.629489, 52.066637], [-0.629491, 52.066639], [-0.629492, 52.066639], [-0.629491, 52.066638], [-0.629487, 52.066636], [-0.629486, 52.066634], [-0.629486, 52.066634], [-0.629488, 52.066634], [-0.629488, 52.066635], [-0.629488, 52.066636], [-0.629488, 52.066636], [-0.629488, 52.066636], [-0.629488, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.629491, 52.066637], [-0.62949, 52.066637], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.62949, 52.066637], [-0.629491, 52.066637], [-0.629491, 52.066638], [-0.629491, 52.066638], [-0.62949, 52.066636], [-0.629491, 52.066636], [-0.629491, 52.066636], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.629489, 52.066636], [-0.62949, 52.066635], [-0.62949, 52.066635], [-0.629492, 52.066635], [-0.629491, 52.066635], [-0.62949, 52.066636], [-0.62949, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066637], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.629489, 52.066636], [-0.629492, 52.066638], [-0.629507, 52.06665], [-0.629525, 52.066665], [-0.629529, 52.066676], [-0.629542, 52.066695], [-0.629576, 52.066732], [-0.629613, 52.066773], [-0.62965, 52.066827], [-0.629684, 52.06688], [-0.629714, 52.066925], [-0.629752, 52.06698], [-0.629787, 52.067028], [-0.629823, 52.067076], [-0.62984, 52.067105], [-0.62984, 52.067108], [-0.629868, 52.067094], [-0.629943, 52.067071], [-0.630017, 52.067056], [-0.630104, 52.067045], [-0.630189, 52.067037], [-0.630281, 52.067027], [-0.630356, 52.067016], [-0.63045, 52.067008], [-0.630536, 52.067016], [-0.630608, 52.067042], [-0.630652, 52.067077], [-0.63068, 52.067121], [-0.630699, 52.067173], [-0.630719, 52.067221], [-0.630742, 52.067265], [-0.63077, 52.067315], [-0.6308, 52.067366], [-0.630832, 52.067422], [-0.630861, 52.067473], [-0.630891, 52.067524], [-0.63092, 52.067575], [-0.630946, 52.06762], [-0.630979, 52.067676], [-0.631009, 52.067727], [-0.631024, 52.067776], [-0.63101, 52.067836], [-0.630959, 52.067878], [-0.630888, 52.067903], [-0.630811, 52.067914], [-0.630745, 52.06792], [-0.630662, 52.067933], [-0.630591, 52.067947], [-0.630508, 52.067964], [-0.630414, 52.067982], [-0.630337, 52.067997], [-0.630254, 52.068013], [-0.630163, 52.068032], [-0.630081, 52.068049], [-0.629998, 52.068065], [-0.629914, 52.068082], [-0.629838, 52.068097], [-0.629747, 52.068116], [-0.629671, 52.068131], [-0.629587, 52.068148], [-0.629496, 52.068166], [-0.629421, 52.068181], [-0.629339, 52.068198], [-0.629255, 52.068214], [-0.629168, 52.068223], [-0.62908, 52.068209], [-0.629015, 52.068174], [-0.628977, 52.068124], [-0.628958, 52.06808], [-0.628935, 52.068038], [-0.628905, 52.068001], [-0.628861, 52.067952], [-0.628818, 52.067905], [-0.628777, 52.067855], [-0.628741, 52.06781], [-0.628703, 52.067761], [-0.628667, 52.067713], [-0.628624, 52.067661], [-0.628583, 52.067614], [-0.628544, 52.067566], [-0.628502, 52.067517], [-0.628465, 52.067468], [-0.628463, 52.067415], [-0.628506, 52.067373], [-0.628574, 52.067351], [-0.628641, 52.067344], [-0.628718, 52.067335], [-0.628796, 52.067321], [-0.628883, 52.067302], [-0.628964, 52.067284], [-0.629038, 52.067266], [-0.629122, 52.067247], [-0.629213, 52.067225], [-0.629295, 52.067206], [-0.629369, 52.067188], [-0.629451, 52.067169], [-0.629536, 52.067143], [-0.629588, 52.067106], [-0.629604, 52.067066], [-0.629598, 52.067019], [-0.629581, 52.066962], [-0.629568, 52.066911], [-0.629557, 52.066854], [-0.629548, 52.066792], [-0.62954, 52.066739], [-0.629536, 52.066703], [-0.629537, 52.066683], [-0.629535, 52.066674], [-0.629539, 52.066674], [-0.629536, 52.066678], [-0.629529, 52.066685], [-0.629523, 52.066691], [-0.629518, 52.066693], [-0.629513, 52.066695], [-0.629508, 52.066696], [-0.629505, 52.066697], [-0.629503, 52.066698], [-0.629501, 52.066697], [-0.629498, 52.066695], [-0.629494, 52.066691], [-0.62949, 52.066686], [-0.629489, 52.066684], [-0.629492, 52.066682], [-0.629495, 52.066673], [-0.629496, 52.066663], [-0.629498, 52.066652], [-0.629501, 52.066642], [-0.629504, 52.066635], [-0.629505, 52.066624], [-0.629501, 52.066614], [-0.629496, 52.066602], [-0.629496, 52.066597], [-0.629498, 52.066596], [-0.629496, 52.066595], [-0.629496, 52.066594], [-0.629493, 52.066594], [-0.629492, 52.066594], [-0.629492, 52.066593], [-0.629491, 52.066593], [-0.629491, 52.066593], [-0.629491, 52.066593], [-0.629491, 52.066593]];

// Convert coordinates to OpenLayers format

var lineString = new ol.geom.LineString(coordinates.map(function (coord) {
  return ol.proj.fromLonLat(coord);
}));

var gpsLineString = new ol.geom.LineString(gps_coords.map(function (coord1) {
    return ol.proj.fromLonLat(coord1);
  }));

// Create a feature with the lineString geometry
var feature = new ol.Feature({
  geometry: lineString
});

const feature2 = new ol.Feature({
    geometry: gpsLineString
  });

// Create a vector layer to display the feature
var vectorLayer = new ol.layer.Vector({
  source: new ol.source.Vector({
    features: [feature]
  }),
  style: new ol.style.Style({
    stroke: new ol.style.Stroke({
      color: 'red',
      width: 4
    })
  })
});

var vectorLayer1 = new ol.layer.Vector({
    source: new ol.source.Vector({
      features: [feature2]
    }),
    style: new ol.style.Style({
      stroke: new ol.style.Stroke({
        color: 'blue',
        width: 2
      })
    })
  });

  
var lonMin = -0.6491;
var latMin = 52.0419;
var lonMax = -0.6015;
var latMax = 52.0962;

// convert lat lon to Web Mercator
var extent = ol.proj.transformExtent([lonMin, latMin, lonMax, latMax], 'EPSG:4326', 'EPSG:3857');

//
var view = new ol.View({
  center: ol.extent.getCenter(extent),
  extent: extent,
  zoom: 12
});
// create map object
var map = new ol.Map({
  target: 'map', // map container
  layers: [

    new ol.layer.Tile({
      source: new ol.source.OSM()
    }),
    vectorLayer,
    vectorLayer1
  ],
  view: view
});

// Calculate and set video container height dynamically
function setVideoContainerHeight() {
  var videoContainers = document.querySelectorAll('.video-container');
  videoContainers.forEach(function (container) {
    var width = container.offsetWidth;
    container.style.height = width * 9 / 16 + 'px'; // 16:9 aspect ratio
  });
}

// Run setVideoContainerHeight initially and on window resize
window.addEventListener('resize', setVideoContainerHeight);
setVideoContainerHeight();


// Get all video elements
var videos = document.querySelectorAll('video');

// Get the progress bar element
var progressBar = document.getElementById('progress');

// Add event listener to progress bar change
progressBar.addEventListener('input', function () {
  // Get the progress value
  var progressValue = progressBar.value;

  // Set time to all video elements
  videos.forEach(function (video) {
    // Convert progress value to time
    var time = video.duration * (progressValue / 100);
    console.log(video.clientWidth, video.clientHeight)
    video.currentTime = time;
  });
});

// Get the play and stop buttons
var playButton = document.getElementById('playButton');
var stopButton = document.getElementById('stopButton');
// Get the frame number display element
var frameNumber = document.getElementById('frameNumber');

// Add event listener to play button
playButton.addEventListener('click', function () {
  videos.forEach(function (video) {
    video.play();
  });
});

// Add event listener to stop button
stopButton.addEventListener('click', function () {
  videos.forEach(function (video) {
    video.pause();
    // video.currentTime = 0;
  });
});


